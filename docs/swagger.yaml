basePath: /v1
definitions:
  authormodel.Author:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  authormodel.Filter:
    properties:
      searchKey:
        type: string
    type: object
  authormodel.ReqCreateAuthor:
    properties:
      name:
        example: Nguyễn Nhật Ánh
        type: string
    type: object
  authormodel.ResCreateAuthor:
    properties:
      id:
        type: string
    type: object
  authormodel.ResListAuthor:
    properties:
      data:
        items:
          $ref: '#/definitions/authormodel.Author'
        type: array
      filter:
        $ref: '#/definitions/authormodel.Filter'
      paging:
        $ref: '#/definitions/common.Paging'
    type: object
  categorymodel.Category:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  categorymodel.Filter:
    properties:
      searchKey:
        type: string
    type: object
  categorymodel.ReqCreateCategory:
    properties:
      name:
        example: Trinh thám
        type: string
    type: object
  categorymodel.ResCreateCategory:
    properties:
      id:
        type: string
    type: object
  categorymodel.ResListCategory:
    properties:
      data:
        items:
          $ref: '#/definitions/categorymodel.Category'
        type: array
      filter:
        $ref: '#/definitions/categorymodel.Filter'
      paging:
        $ref: '#/definitions/common.Paging'
    type: object
  common.AppError:
    properties:
      errorKey:
        example: ErrKey
        type: string
      log:
        example: error log
        type: string
      message:
        example: error message
        type: string
      statusCode:
        example: 400
        type: integer
    type: object
  common.Paging:
    properties:
      limit:
        example: 10
        type: integer
      page:
        example: 1
        type: integer
      total:
        example: 11
        type: integer
    type: object
  common.ResSuccess:
    properties:
      data:
        example: true
        type: boolean
    type: object
  enum.DebtType:
    enum:
    - Pay
    - Debt
    type: string
    x-enum-varnames:
    - Pay
    - Debt
  filter.SupplierDebtFilter:
    properties:
      from:
        example: 1709500431
        type: integer
      to:
        example: 1709500431
        type: integer
    type: object
  filter.SupplierImportFilter:
    properties:
      from:
        example: 1709500431
        type: integer
      to:
        example: 1709500431
        type: integer
    type: object
  importnotedetailmodel.ImportNoteDetail:
    properties:
      importNoteId:
        example: import note id
        type: string
      price:
        type: number
      product:
        $ref: '#/definitions/productmodel.SimpleProduct'
      qtyImport:
        type: integer
    type: object
  importnotedetailmodel.ImportNoteDetailCreate:
    properties:
      isReplacePrice:
        example: true
        type: boolean
      price:
        example: 60000
        type: number
      productId:
        example: product id
        type: string
      qtyImport:
        example: 100
        type: number
    type: object
  importnotemodel.Filter:
    properties:
      closeAtFrom:
        example: 1709500431
        type: integer
      closeAtTo:
        example: 1709500431
        type: integer
      closeBy:
        example: user name
        type: string
      createAtFrom:
        example: 1709500431
        type: integer
      createAtTo:
        example: 1709500431
        type: integer
      createBy:
        example: user name
        type: string
      maxPrice:
        example: 1000
        type: number
      minPrice:
        example: 10
        type: number
      searchKey:
        example: ""
        type: string
      status:
        example: Done
        type: string
      supplier:
        example: supplier name
        type: string
    type: object
  importnotemodel.ImportNote:
    properties:
      closeAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      closeBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      createAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      createBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      id:
        example: import note id
        type: string
      status:
        allOf:
        - $ref: '#/definitions/importnotemodel.ImportNoteStatus'
        example: Done
      supplier:
        $ref: '#/definitions/importnotemodel.SimpleSupplier'
      totalPrice:
        example: 120000
        type: number
    type: object
  importnotemodel.ImportNoteStatus:
    enum:
    - InProgress
    - Done
    - Cancel
    type: string
    x-enum-varnames:
    - InProgress
    - Done
    - Cancel
  importnotemodel.ReqCreateImportNote:
    properties:
      details:
        items:
          $ref: '#/definitions/importnotedetailmodel.ImportNoteDetailCreate'
        type: array
      id:
        example: ""
        type: string
      supplierId:
        example: supplier id
        type: string
    type: object
  importnotemodel.ReqUpdateImportNote:
    properties:
      status:
        allOf:
        - $ref: '#/definitions/importnotemodel.ImportNoteStatus'
        example: Done
    type: object
  importnotemodel.ResCreateImportNote:
    properties:
      data:
        example: "123"
        type: string
    type: object
  importnotemodel.ResDetailImportNote:
    properties:
      closeAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      closeBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      createAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      createBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      details:
        items:
          $ref: '#/definitions/importnotedetailmodel.ImportNoteDetail'
        type: array
      id:
        example: import note id
        type: string
      status:
        allOf:
        - $ref: '#/definitions/importnotemodel.ImportNoteStatus'
        example: Done
      supplier:
        $ref: '#/definitions/importnotemodel.SimpleSupplier'
      totalPrice:
        example: 120000
        type: number
    type: object
  importnotemodel.ResListImportNote:
    properties:
      data:
        description: Data contains list of import note.
        items:
          $ref: '#/definitions/importnotemodel.ImportNote'
        type: array
      filter:
        allOf:
        - $ref: '#/definitions/importnotemodel.Filter'
        description: Filter contains the filter parameters used to retrieve import
          note.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  importnotemodel.ResSeeDetailImportNote:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/importnotemodel.ResDetailImportNote'
        description: Data contains the detailed information about import note details.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  importnotemodel.SimpleSupplier:
    properties:
      id:
        example: supplier id
        type: string
      name:
        example: Nguyễn Văn A
        type: string
    type: object
  inventorychecknotedetailmodel.InventoryCheckNoteDetail:
    properties:
      difference:
        example: 100
        type: integer
      final:
        example: 200
        type: integer
      initial:
        example: 100
        type: integer
      inventoryCheckNoteId:
        example: inventory check note id
        type: string
      product:
        $ref: '#/definitions/productmodel.SimpleProduct'
    type: object
  inventorychecknotedetailmodel.InventoryCheckNoteDetailCreate:
    properties:
      difference:
        example: 100
        type: integer
      productId:
        example: product id
        type: string
    type: object
  inventorychecknotemodel.Filter:
    properties:
      createAtFrom:
        example: 1709500431
        type: integer
      createAtTo:
        example: 1709500431
        type: integer
      createBy:
        example: user name
        type: string
      searchKey:
        example: ""
        type: string
    type: object
  inventorychecknotemodel.InventoryCheckNote:
    properties:
      createAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      createBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      id:
        example: inventory check note id
        type: string
      qtyAfterAdjust:
        example: 200
        type: integer
      qtyDifferent:
        example: 100
        type: integer
    type: object
  inventorychecknotemodel.ReqCreateInventoryCheckNote:
    properties:
      details:
        items:
          $ref: '#/definitions/inventorychecknotedetailmodel.InventoryCheckNoteDetailCreate'
        type: array
      id:
        example: ""
        type: string
    type: object
  inventorychecknotemodel.ResCreateInventoryCheckNote:
    properties:
      data:
        example: "123"
        type: string
    type: object
  inventorychecknotemodel.ResDetailInventoryCheckNote:
    properties:
      createAt:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      createBy:
        $ref: '#/definitions/usermodel.SimpleUser'
      details:
        items:
          $ref: '#/definitions/inventorychecknotedetailmodel.InventoryCheckNoteDetail'
        type: array
      id:
        example: inventory check note id
        type: string
      qtyAfterAdjust:
        example: 200
        type: integer
      qtyDifferent:
        example: 100
        type: integer
    type: object
  inventorychecknotemodel.ResListInventoryCheckNote:
    properties:
      data:
        description: Data contains list of inventory check note.
        items:
          $ref: '#/definitions/inventorychecknotemodel.InventoryCheckNote'
        type: array
      filter:
        allOf:
        - $ref: '#/definitions/inventorychecknotemodel.Filter'
        description: Filter contains the filter parameters used to retrieve inventory
          check note.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  inventorychecknotemodel.ResSeeDetailInventoryCheckNote:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/inventorychecknotemodel.ResDetailInventoryCheckNote'
        description: Data contains the detailed information about inventory check
          note details.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  productmodel.Product:
    properties:
      authorIds:
        type: string
      categoryIds:
        type: string
      desc:
        type: string
      edition:
        type: integer
      id:
        type: string
      isActive:
        type: boolean
      name:
        type: string
      price:
        type: number
      publisherId:
        type: string
      quantity:
        type: integer
      salePrice:
        type: number
    type: object
  productmodel.SimpleProduct:
    properties:
      id:
        example: product id
        type: string
      name:
        example: Những câu chuyện hay
        type: string
    type: object
  supplierdebtmodel.SupplierDebt:
    properties:
      createAt:
        example: "1709500431"
        type: string
      createBy:
        example: user_id
        type: string
      id:
        example: debt001
        type: string
      qty:
        example: -70000
        type: number
      qtyLeft:
        example: -100000
        type: number
      supplierId:
        example: "123"
        type: string
      type:
        allOf:
        - $ref: '#/definitions/enum.DebtType'
        example: Debt
    type: object
  suppliermodel.ReqCreateSupplier:
    properties:
      debt:
        example: -100000
        type: number
      email:
        example: a@gmail.com
        type: string
      id:
        example: "123"
        type: string
      name:
        example: Nguyễn Văn A
        type: string
      phone:
        example: "0123456789"
        type: string
    type: object
  suppliermodel.ReqUpdateDebtSupplier:
    properties:
      qtyUpdate:
        example: 10000
        type: number
    type: object
  suppliermodel.ReqUpdateInfoSupplier:
    properties:
      email:
        example: b@gmail.com
        type: string
      name:
        example: tên đã đổi
        type: string
      phone:
        example: "1234567890"
        type: string
    type: object
  suppliermodel.ResDebtSupplier:
    properties:
      debt:
        example: -100000
        type: number
      debtHistory:
        items:
          $ref: '#/definitions/supplierdebtmodel.SupplierDebt'
        type: array
      email:
        example: a@gmail.com
        type: string
      id:
        example: "123"
        type: string
      name:
        example: Nguyễn Văn A
        type: string
      phone:
        example: "0123456789"
        type: string
    type: object
  suppliermodel.ResListSupplier:
    properties:
      data:
        description: Data contains list of supplier.
        items:
          $ref: '#/definitions/suppliermodel.Supplier'
        type: array
      filter:
        allOf:
        - $ref: '#/definitions/filter.SupplierImportFilter'
        description: Filter contains the filter parameters used to retrieve supplier.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  suppliermodel.ResSeeDebtSupplier:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/suppliermodel.ResDebtSupplier'
        description: Data contains the detailed information about supplier's debts.
      filter:
        allOf:
        - $ref: '#/definitions/filter.SupplierDebtFilter'
        description: Filter contains the filter parameters used to retrieve debts.
      paging:
        allOf:
        - $ref: '#/definitions/common.Paging'
        description: Paging provides information about pagination.
    type: object
  suppliermodel.ResSupplierCreate:
    properties:
      data:
        example: "123"
        type: string
    type: object
  suppliermodel.Supplier:
    properties:
      debt:
        example: -100000
        type: number
      email:
        example: a@gmail.com
        type: string
      id:
        example: "123"
        type: string
      name:
        example: Nguyễn Văn A
        type: string
      phone:
        example: "0123456789"
        type: string
    type: object
  tokenprovider.Token:
    properties:
      created:
        example: "2023-12-03T15:02:19.62113565Z"
        type: string
      expiry:
        example: 2592000
        type: integer
      token:
        example: token
        type: string
    type: object
  usermodel.Account:
    properties:
      accessToken:
        $ref: '#/definitions/tokenprovider.Token'
      refreshToken:
        $ref: '#/definitions/tokenprovider.Token'
    type: object
  usermodel.ReqCreateUser:
    properties:
      email:
        example: a@gmail.com
        type: string
      name:
        example: Nguyễn Văn A
        type: string
      roleId:
        example: user
        type: string
    type: object
  usermodel.ReqLoginUser:
    properties:
      email:
        example: b@gmail.com
        type: string
      password:
        example: app123
        type: string
    type: object
  usermodel.ResCreateUser:
    properties:
      data:
        example: "123"
        type: string
    type: object
  usermodel.SimpleUser:
    properties:
      id:
        example: user id
        type: string
      name:
        example: Nguyễn Văn A
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: 21520095@gm.uit.edu.vn
    name: Bui Vi Quoc
    url: https://www.faceproduct.com/bviquoc/
  title: QTK Store API
  version: "1.0"
paths:
  /authors:
    get:
      consumes:
      - application/json
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authormodel.ResListAuthor'
      security:
      - BearerAuth: []
      summary: Get all authors
      tags:
      - authors
    post:
      consumes:
      - application/json
      parameters:
      - description: Create author
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/authormodel.ReqCreateAuthor'
      produces:
      - application/json
      responses:
        "200":
          description: author id
          schema:
            $ref: '#/definitions/authormodel.ResCreateAuthor'
      security:
      - BearerAuth: []
      summary: Create author with name
      tags:
      - authors
  /categories:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/categorymodel.ResListCategory'
      security:
      - BearerAuth: []
      summary: Get all categories
      tags:
      - categories
    post:
      consumes:
      - application/json
      parameters:
      - description: Create category
        in: body
        name: category
        required: true
        schema:
          $ref: '#/definitions/categorymodel.ReqCreateCategory'
      produces:
      - application/json
      responses:
        "200":
          description: category id
          schema:
            $ref: '#/definitions/categorymodel.ResCreateCategory'
      security:
      - BearerAuth: []
      summary: Create category with name
      tags:
      - categories
  /importNotes:
    get:
      consumes:
      - application/json
      parameters:
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      - example: 1709500431
        in: query
        name: closeAtFrom
        type: integer
      - example: 1709500431
        in: query
        name: closeAtTo
        type: integer
      - example: user name
        in: query
        name: closeBy
        type: string
      - example: 1709500431
        in: query
        name: createAtFrom
        type: integer
      - example: 1709500431
        in: query
        name: createAtTo
        type: integer
      - example: user name
        in: query
        name: createBy
        type: string
      - example: 1000
        in: query
        name: maxPrice
        type: number
      - example: 10
        in: query
        name: minPrice
        type: number
      - example: ""
        in: query
        name: search
        type: string
      - example: Done
        in: query
        name: status
        type: string
      - example: supplier name
        in: query
        name: supplier
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: list import note
          schema:
            $ref: '#/definitions/importnotemodel.ResListImportNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: List import note
      tags:
      - importNotes
    post:
      consumes:
      - application/json
      parameters:
      - description: import note need to create
        in: body
        name: importNote
        required: true
        schema:
          $ref: '#/definitions/importnotemodel.ReqCreateImportNote'
      produces:
      - application/json
      responses:
        "200":
          description: import note id
          schema:
            $ref: '#/definitions/importnotemodel.ResCreateImportNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Create import note
      tags:
      - importNotes
  /importNotes/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: import note id
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: import note
          schema:
            $ref: '#/definitions/importnotemodel.ResSeeDetailImportNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: See detail import note
      tags:
      - importNotes
    patch:
      consumes:
      - application/json
      parameters:
      - description: import note id
        in: path
        name: id
        required: true
        type: string
      - description: status need to update of import note
        in: body
        name: importNote
        required: true
        schema:
          $ref: '#/definitions/importnotemodel.ReqUpdateImportNote'
      produces:
      - application/json
      responses:
        "200":
          description: status of response
          schema:
            $ref: '#/definitions/common.ResSuccess'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Change status import note
      tags:
      - importNotes
  /inventoryCheckNotes:
    get:
      consumes:
      - application/json
      parameters:
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      - example: 1709500431
        in: query
        name: createAtFrom
        type: integer
      - example: 1709500431
        in: query
        name: createAtTo
        type: integer
      - example: user name
        in: query
        name: createBy
        type: string
      - example: ""
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: list inventory check note
          schema:
            $ref: '#/definitions/inventorychecknotemodel.ResListInventoryCheckNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: List inventory check note
      tags:
      - inventoryCheckNotes
    post:
      consumes:
      - application/json
      parameters:
      - description: inventory check note need to create
        in: body
        name: inventoryCheckNote
        required: true
        schema:
          $ref: '#/definitions/inventorychecknotemodel.ReqCreateInventoryCheckNote'
      produces:
      - application/json
      responses:
        "200":
          description: inventory check note id
          schema:
            $ref: '#/definitions/inventorychecknotemodel.ResCreateInventoryCheckNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Create inventory check note
      tags:
      - inventoryCheckNotes
  /inventoryCheckNotes/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: inventory check note id
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: inventory check note
          schema:
            $ref: '#/definitions/inventorychecknotemodel.ResSeeDetailInventoryCheckNote'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: See detail inventory check note
      tags:
      - inventoryCheckNotes
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: login information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usermodel.ReqLoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: user token
          schema:
            $ref: '#/definitions/usermodel.Account'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Login
      tags:
      - common
  /products:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/productmodel.Product'
      security:
      - BearerAuth: []
      summary: Get all products
      tags:
      - products
  /suppliers:
    get:
      consumes:
      - application/json
      parameters:
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      - example: 100000
        in: query
        name: maxDebt
        type: number
      - example: 10
        in: query
        name: minDebt
        type: number
      - example: id, name, phone, email
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: list supplier
          schema:
            $ref: '#/definitions/suppliermodel.ResListSupplier'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: List supplier
      tags:
      - suppliers
    post:
      consumes:
      - application/json
      parameters:
      - description: supplier need to create
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/suppliermodel.ReqCreateSupplier'
      produces:
      - application/json
      responses:
        "200":
          description: supplier id
          schema:
            $ref: '#/definitions/suppliermodel.ResSupplierCreate'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Create supplier
      tags:
      - suppliers
  /suppliers/{id}:
    patch:
      consumes:
      - application/json
      parameters:
      - description: supplier id
        in: path
        name: id
        required: true
        type: string
      - description: supplier info to update
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/suppliermodel.ReqUpdateInfoSupplier'
      produces:
      - application/json
      responses:
        "200":
          description: status of response
          schema:
            $ref: '#/definitions/common.ResSuccess'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Update info supplier
      tags:
      - suppliers
  /suppliers/{id}/debts:
    get:
      consumes:
      - application/json
      parameters:
      - description: supplier id
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      - example: 1709500431
        in: query
        name: from
        type: integer
      - example: 1709500431
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: supplier
          schema:
            $ref: '#/definitions/suppliermodel.ResSeeDebtSupplier'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: See debts of supplier
      tags:
      - suppliers
  /suppliers/{id}/import_notes:
    get:
      consumes:
      - application/json
      parameters:
      - description: supplier id
        in: path
        name: id
        required: true
        type: string
      - example: 10
        in: query
        name: limit
        type: integer
      - example: 1
        in: query
        name: page
        type: integer
      - example: 11
        in: query
        name: total
        type: integer
      - example: 1709500431
        in: query
        name: from
        type: integer
      - example: 1709500431
        in: query
        name: to
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: supplier
          schema:
            $ref: '#/definitions/suppliermodel.ResSeeDebtSupplier'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: See import notes of supplier
      tags:
      - suppliers
  /suppliers/{id}/pay:
    post:
      consumes:
      - application/json
      parameters:
      - description: supplier id
        in: path
        name: id
        required: true
        type: string
      - description: pay information
        in: body
        name: supplier
        required: true
        schema:
          $ref: '#/definitions/suppliermodel.ReqUpdateDebtSupplier'
      produces:
      - application/json
      responses:
        "200":
          description: status of response
          schema:
            $ref: '#/definitions/common.ResSuccess'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Pay supplier
      tags:
      - suppliers
  /users:
    post:
      consumes:
      - application/json
      parameters:
      - description: user need to create
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/usermodel.ReqCreateUser'
      produces:
      - application/json
      responses:
        "200":
          description: user id
          schema:
            $ref: '#/definitions/usermodel.ResCreateUser'
        "400":
          description: error
          schema:
            $ref: '#/definitions/common.AppError'
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
